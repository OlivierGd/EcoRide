-- init_db.sql
BEGIN;

----------------------------------------------------------
-- 1. USERS
----------------------------------------------------------
CREATE TABLE IF NOT EXISTS public.users (
                                            user_id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            lastname         VARCHAR(100),
                                            firstname        VARCHAR(100),
                                            email            VARCHAR(255) UNIQUE,
                                            password         TEXT,
                                            profile_picture  TEXT,
                                            ranking          NUMERIC,
                                            credits          INTEGER,
                                            role             INTEGER,
                                            status           VARCHAR,
                                            created_at       TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

----------------------------------------------------------
-- 2. VEHICULE
----------------------------------------------------------
CREATE TABLE IF NOT EXISTS public.vehicule (
                                               id_vehicule          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                               id_conducteur        INTEGER,
                                               marque               VARCHAR(250),
                                               modele               VARCHAR(250),
                                               type_carburant       VARCHAR(250),
                                               plaque_immatriculation VARCHAR(12) UNIQUE,
                                               nbr_places           INTEGER,
                                               actif                BOOLEAN,
                                               date_creation        DATE NOT NULL
);

----------------------------------------------------------
-- 3. TRIPS
----------------------------------------------------------
CREATE TABLE IF NOT EXISTS public.trips (
                                            trip_id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            driver_id            INTEGER NOT NULL,
                                            vehicle_id           INTEGER NOT NULL,
                                            start_city           VARCHAR(250) NOT NULL,
                                            end_city             VARCHAR(250) NOT NULL,
                                            departure_at         TIMESTAMP NOT NULL,
                                            available_seats      SMALLINT NOT NULL,
                                            price_per_passenger  NUMERIC(6,2) NOT NULL,
                                            comment              TEXT,
                                            no_smoking           BOOLEAN NOT NULL,
                                            music_allowed        BOOLEAN NOT NULL,
                                            discuss_allowed      BOOLEAN NOT NULL,
                                            created_at           TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                            status               VARCHAR(30)
);

----------------------------------------------------------
-- 4. BOOKINGS
----------------------------------------------------------
CREATE TABLE IF NOT EXISTS public.bookings (
                                               booking_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                               trip_id         INTEGER NOT NULL,
                                               user_id         INTEGER NOT NULL,
                                               seats_reserved  INTEGER NOT NULL,
                                               created_at      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                               status          VARCHAR(20) NOT NULL DEFAULT 'pending'
);

----------------------------------------------------------
-- 5. PAYMENTS
----------------------------------------------------------
CREATE TABLE IF NOT EXISTS public.payments (
                                               payment_id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                               user_id            INTEGER NOT NULL,
                                               trip_id            INTEGER NOT NULL,
                                               booking_id         INTEGER,
                                               type_transaction   VARCHAR(50) NOT NULL,
                                               montant            NUMERIC(10,2) NOT NULL,
                                               description        TEXT,
                                               date_transaction   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                               statut_transaction VARCHAR(30) DEFAULT 'reserve',
                                               commission_plateforme NUMERIC(10,2) DEFAULT 0
);

----------------------------------------------------------
-- 6. CREDITS_HISTORY
----------------------------------------------------------
CREATE TABLE IF NOT EXISTS public.credits_history (
                                                      credit_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                      user_id       INTEGER NOT NULL,
                                                      montant       NUMERIC(10,2) NOT NULL,
                                                      date_credit   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                      type          VARCHAR(50) DEFAULT 'achat',
                                                      description   TEXT,
                                                      created_at    TIMESTAMP
);

----------------------------------------------------------
-- 7. REVIEWS
----------------------------------------------------------
CREATE TABLE IF NOT EXISTS public.reviews (
                                              review_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                              trip_id       INTEGER NOT NULL,
                                              booking_id    INTEGER NOT NULL,
                                              user_id       INTEGER NOT NULL,
                                              rating        INTEGER NOT NULL CHECK (rating BETWEEN 1 AND 5),
                                              commentaire   TEXT,
                                              date_review   TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

----------------------------------------------------------
-- 8. FOREIGN-KEYS
----------------------------------------------------------
ALTER TABLE IF EXISTS public.bookings
    ADD CONSTRAINT IF NOT EXISTS bookings_trip_id_fkey
    FOREIGN KEY (trip_id) REFERENCES public.trips(trip_id);

ALTER TABLE IF EXISTS public.bookings
    ADD CONSTRAINT IF NOT EXISTS bookings_user_id_fkey
    FOREIGN KEY (user_id) REFERENCES public.users(user_id);

ALTER TABLE IF EXISTS public.credits_history
    ADD CONSTRAINT IF NOT EXISTS credits_history_user_id_fkey
    FOREIGN KEY (user_id) REFERENCES public.users(user_id);

ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT IF NOT EXISTS payments_booking_id_fkey
    FOREIGN KEY (booking_id) REFERENCES public.bookings(booking_id);

ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT IF NOT EXISTS payments_trip_id_fkey
    FOREIGN KEY (trip_id) REFERENCES public.trips(trip_id);

ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT IF NOT EXISTS payments_user_id_fkey
    FOREIGN KEY (user_id) REFERENCES public.users(user_id);

ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT IF NOT EXISTS reviews_booking_id_fkey
    FOREIGN KEY (booking_id) REFERENCES public.bookings(booking_id);

ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT IF NOT EXISTS reviews_trip_id_fkey
    FOREIGN KEY (trip_id) REFERENCES public.trips(trip_id);

ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT IF NOT EXISTS reviews_user_id_fkey
    FOREIGN KEY (user_id) REFERENCES public.users(user_id);

COMMIT;

